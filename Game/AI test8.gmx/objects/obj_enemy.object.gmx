<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>enemy_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization

//create the command stack
cmd_stack = ds_list_create();
ds_list_add(cmd_stack,AI_idle);

//variables

//position, space, movement stats

//motion and physics
z = 0;
zprevious = 0;
base_z = 0;
ground = noone;
w = 64;
h = 32;
spd_base = 5;
spd = spd_base;
spd_remaining = spd;
xspd = 0;
yspd = 0;
zspd = 0;
rot_max = 30;
rot_r = 16;
should_pivot = false;
dir_move = 270;
dir_face = 270;
knockback_spd = 2;
dir_knockback = 0;

//awareness
vision_radius = 128;
scent_radius = 0;
hearing_radius = 160;
detection = 1;
z_tolerance = 32;
detection_type = "";

//behavior
check_ahead_distance = 2560;
pursuit_range = 500;
threat_radius = 128;

//states and flags
state = "idle";
in_combat = false;
atk_cooldown = true;
alertness = 0;
surprised = false;
damaged = false;
target_enemy = noone;
noise_detected = false;
interrupted = false;
airborne = false;
channeling = false;
movement_enabled = true;
rotation_enabled = true;
acceleration_enabled = true;
returning = false;


//timers and cooldowns
suspicion_timer = 0;
suspicion_duration = 10*room_speed;
detection_tolerance = 0;
suspicion_threshold = 60;
recover_timer = 0;
recover_dur = 1*room_speed;
hunt_timer = 0;
hunt_duration = 15*room_speed;
battlecry_timer = 0;
battlecry_dur = 1*room_speed;
suspicion_timer = 0;
knockback_dur = 1*room_speed;
knockback_timer = 0;
atk_cd_timer = 0;
atk_cd  = 2*room_speed;
atk_timer = 0;
atk_dur = 1*room_speed;

//combat
hp = 10;
atk_dmg = 5;
atk_rng = 128;
atk_ready = true;

//memory
target_enemy = noone;
last_heard_x = 0;
last_heard_y = 0;
enemy_list = ds_list_create();
enemy_data = ds_list_create();

path = path_add();
localpath = noone;
max_path_dist = 1000;

lastseen_x = 0;
lastseen_y = 0;
patrol_x = 0;
patrol_y = 0;
post_x = x;
post_y = y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(cmd_stack);
ds_list_destroy(enemy_list);
var s,i,obj;
s = ds_list_size(data_list) - 1;
for(i = s; i&gt;=0;i-=1){
  obj = l_get(data_list,i);
  with(obj){instance_destroy();}
}
ds_list_destroy(data_list);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Run AI script
AI_main();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animate

switch(state){
case "idle - standby":
  sprite_index = enemy_idle;
  break;
case "idle - pace":
  sprite_index = enemy_idle;
  break;
case "idle - high alert":
  sprite_index = enemy_idle;
  break;
case "entering combat":
  sprite_index = enemy_idle;
  break;
case "engaging enemy":
  sprite_index = enemy_idle;
  break;
case "attacking":
  sprite_index = enemy_attack;
  break;
case "recovering from attack":
  sprite_index = enemy_recover;
  break;
case "knocked back":
  sprite_index = enemy_idle;
  break;
}

draw_self();
draw_set_color(c_green);
draw_text(x,y,state);
var xpos,ypos;
xpos = lengthdir_x(vision_radius,dir_face);
ypos = lengthdir_y(vision_radius,dir_face);
draw_line(x+w/2,y+h/2,x+w/2+xpos,y+h/2+ypos);
draw_set_color(c_yellow);
xpos = lengthdir_x(vision_radius,dir_face+30);
ypos = lengthdir_y(vision_radius,dir_face+30);
draw_line(x+w/2,y+h/2,x+w/2+xpos,y+h/2+ypos);
xpos = lengthdir_x(vision_radius,dir_face-30);
ypos = lengthdir_y(vision_radius,dir_face-30);
draw_line(x+w/2,y+h/2,x+w/2+xpos,y+h/2+ypos);
draw_set_color(c_orange);
xpos = lengthdir_x(vision_radius/2,dir_face-90);
ypos = lengthdir_y(vision_radius/2,dir_face-90);
draw_line(x+w/2,y+h/2,x+w/2+xpos,y+h/2+ypos);
xpos = lengthdir_x(vision_radius/2,dir_face+90);
ypos = lengthdir_y(vision_radius/2,dir_face+90);
draw_line(x+w/2,y+h/2,x+w/2+xpos,y+h/2+ypos);
draw_set_color(c_red);
draw_circle(x+cell_w/2,y+cell_h/2,hearing_radius,true);
if(localpath != noone){
  draw_text(x,y,string(localpath.next_x));
  draw_text(x,y+24,string(localpath.next_y));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

Ability System

ability_registry[]: 
	an array of all ability prototype objects

ability prototype: 
	a persistent object instantiated once with a unique id, stored in ability_register
	an object containing ability constants and casting routines
	

ability object: 
	contains information specific to the player, including modifiable stats 
	non-persistent object instantiated once for each player who has the ability on entering a dungeon (possibly with multiple copies of the same ability)
	(all ability specific modifications applied to the prototype on entering dungeon)
	
obj_player.abl[max_abl_count]: 
	an array of ability ids equipped by the player
	points to an object in abilities_array or the special object noone

obj_player.abilities_array: 
	an array of ability objects known to the player
	generated on entering a dungeon and cleared on exit;
	generated from obj_player.abilities_known 
	cannot be altered

obj_player.abilities_known:
	2D array of id:level pairs in obj_player
	can be altered outside of the dungeon
	

ability controller: 
	a multi-instantiable object used to carry out the effect of an ability
	

Common Ability Stats
	Cost
	Cooldown

Specific Ability Stats
	skillpower: generic powerlevel
	damage: damage dealt by the ability's effects
	delay: time elapsed between casting the ability and the ability's effects
	duration: how long the ability lasts
	range: maximum distance the ability's projectiles travel before expiring
	time_increment: for abilities whose effects change over time, the number of seconds elapsed between changes in state
	effect_duration: how long the secondary effects created by the ability last

Common Ability Attributes
	Animation Name
	Icon
	Level
	Controller
	Projectile
	Interruptable

Ability Object States
	Ready
	Cooldown Timer
	Casting Player
	

Process of casting an ability
	1. process user input: check if valid command (not on cooldown, sufficient energy, not stunned etc.)
	
	2. multiplayer verification process: slave requests cast from master, master processes and distributes cast command
	
	3. caster pays energy costs and begins channeling the ability; if delay>0 windup animation begins; ready = false;
	
	4. if !interrupted create ability_controller/projectile and set parameters; if duration>0 ability animation plays
	
	5. finish casting ability; set cooldown_timer for ability_object; channeling = false; clean up


Projectiles: may apply on-hit effects. execute effects only on enemies hit
Effects/Buffs: apply passive modifiers to the target represented by effect objects. effects may or may not stack with others of the same kind
Summons: an entity created by an ability whose death and creation are dealt with as npcs
	
On hit effects

expiration conditions
	passive effects: never expire
	timed effects: last a fixed duration
	limited use effects: expire after a certain number of uses
	
application conditions
	on-cast/on-attack
	on-hit: subset
	
control method
	global control
	controller object
	buff object
	static variables

	
1. effect is applied; add effect object to effect_list;
2. on attack, search effect_list for effects with trigger=="attack";
3. for each, call effect event user1 (event_perform_object(crnt_effect,ev_other,ev_user1))


